{"version":3,"sources":["custom-plotly.js","fonts/GloriaHallelujah-Regular.ttf","components/Header.js","components/Footer.js","components/Plots.js","components/ExtremeValuesTable.js","components/TopContent.js","components/Dropdown.js","services/data.js","services/info.js","services/tempforecast.js","App.js","index.js"],"names":["Plotly","require","register","module","exports","Header","className","Footer","href","Plot","createPlotlyComponent","Plots","data","tempForecast","dtgs","map","d","dtg","temperatures","Number","temperature","humidities","humidity","filteredForecast","filter","t","Date","parse","length","forecastDtgs","tempForecastValues","Object","keys","temp_data","x","y","name","type","marker","color","hum_data","maxTemp","Math","max","minTemp","min","maxHumi","temperatureLayout","autosize","width","height","paper_bgcolor","plot_bgcolor","title","text","font","family","size","xref","yaxis","range","legend","humidityLayout","showlegend","config","useresizehandler","layout","ExtremeValuesTable","slice","minHumi","id","TopContent","total_measurements","first_day","last_day","Dropdown","value","options","options_numbers","onChange","node","useRef","useState","open","setOpen","handleClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","onClick","opt","index","key","selectedValue","axios","get","then","response","App","allData","setAllData","displayData","setDisplayData","first_day_of_measurements","last_day_of_measurements","info","setInfo","dropdownChoice","setDropdownChoice","setTempForecast","dataService","initialData","infoService","retrievedInfo","tempForecastService","retrievedForecast","nbrDays","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.07a82e0f.chunk.js","sourcesContent":["const Plotly = require('plotly.js/lib/core')\n\n// Load in the trace types for pie, and choropleth\nPlotly.register([\n    require('plotly.js/lib/scatter')\n])\n\nmodule.exports = Plotly","module.exports = __webpack_public_path__ + \"static/media/GloriaHallelujah-Regular.779caa76.ttf\";","import React from 'react'\n\nconst Header = () => {\n    return (\n        <div className='header'>\n            <h1 className='mainTitle'>Erik's Greenhouse</h1>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Footer = () => {\n\n    return (\n        <div className='footer'>\n            <div className='footer-item'> App made by: Erik Liljeroth</div>\n            <div className='footer-item'> LinkedIn: <a href=\"https://www.linkedin.com/in/erikliljeroth/\">Erik Liljeroth</a></div>\n        </div>)\n}\n\nexport default Footer","import React from 'react'\n\nimport createPlotlyComponent from 'react-plotly.js/factory';\nvar Plotly = require('../custom-plotly.js');\nconst Plot = createPlotlyComponent(Plotly);\n\nconst Plots = ({ data, tempForecast, className }) => {\n\n    const dtgs = data.map(d => d.dtg)\n    const temperatures = data.map(d => Number(d.temperature))\n    const humidities = data.map(d => Number(d.humidity))\n\n    let filteredForecast = [...tempForecast]\n\n    // Avoid forecast- and sensor values overlap by removing overlapping forecast values\n    if (tempForecast[0] && dtgs[0]) {\n        filteredForecast = tempForecast.filter(t => Date.parse(t.dtg) > Date.parse(dtgs[data.length - 1]))\n    }\n\n    const forecastDtgs = filteredForecast.map(t => t.dtg)\n    const tempForecastValues = filteredForecast.map(t => Number(t[Object.keys(t)[1]]))\n\n    const temp_data = [\n        {x: dtgs, y: temperatures, name: 'temperature', type: 'scatter', marker:{color:'blue'} }, \n        {x:forecastDtgs, y:tempForecastValues, name:'sarima forecast', type:'scatter', marker:{color:'purple'}}\n    ]\n    const hum_data = [{ x: dtgs, y: humidities, name: 'humidity', type: 'scatter', marker:{color:'blue'} }]\n\n    const maxTemp = Math.max(...temperatures)\n    const minTemp = Math.min(...temperatures)\n    const maxHumi = Math.max(...humidities)\n    const minHumi = Math.min(...humidities)\n\n    const temperatureLayout = {\n        autosize: false,\n        width: 500,\n        height: 500,\n        paper_bgcolor: 'rgba(0,0,0,0)',\n        plot_bgcolor: 'rgba(0,0,0,0)',\n        title: {\n            text: 'Temperature [&deg;C]',\n            font: {\n                family: 'Courier New, monospace',\n                size: 20,\n                color: '#000'\n            },\n            xref: 'paper',\n            x: 0.05\n        },\n        yaxis: { range: [minTemp - 15, maxTemp + 15] }, \n        legend: {x: 0.6, y:1.15}\n    }\n\n    const humidityLayout = {\n        autosize: false,\n        width: 500,\n        height: 500,\n        paper_bgcolor: 'rgba(0,0,0,0)',\n        plot_bgcolor: 'rgba(0,0,0,0)',\n        title: {\n            text: 'Relative Humidity [%]',\n            font: {\n                family: 'Courier New, monospace',\n                size: 20,\n                color: '#000'\n            },\n            xref: 'paper',\n            x: 0.05\n        },\n        yaxis: { range: [minHumi - 15, maxHumi + 15] }, \n        showlegend: true, \n        legend: {x: 0.6, y:1.15}\n    }\n    \n    const config = { useresizehandler: true }\n\n    return (\n        <div className={className}>\n            <Plot\n                data={temp_data}\n                layout={temperatureLayout}\n                config={config}\n            />\n\n            <Plot\n                data={hum_data}\n                layout={humidityLayout}\n                config={config}\n            />\n        </div>\n\n    )\n}\n\nexport default Plots\n","import React from 'react'\n\nconst ExtremeValuesTable = ({ data }) => {\n\n    let temperatures = data.map(d => Number(d.temperature))\n    let humidities = data.map(d => Number(d.humidity))\n    // take just values over last 7 days\n    temperatures = temperatures.slice(-48*7)\n    humidities = humidities.slice(-48*7)\n    const maxTemp = Math.max(...temperatures)\n    const minTemp = Math.min(...temperatures)\n    const maxHumi = Math.max(...humidities)\n    const minHumi = Math.min(...humidities)\n\n    return (\n        <table >\n            <thead >\n                <tr className=\"table_header\">\n                    <th id={'borderboth'}> Quantity [unit] </th>\n                    <th id={'borderboth'}> Min </th>\n                    <th id={'borderbottom'}> Max </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td id={'borderboth'}> Temperature [&deg;C] </td>\n                    <td id={'borderboth'}>  {minTemp}          </td>\n                    <td id={'borderbottom'}  >  {maxTemp}                           </td>\n                </tr>\n                <tr>\n                    <td id={'borderright'}> Relative Humidity [%]   </td>\n                    <td id={'borderright'}> {minHumi}           </td>\n                    <td >  {maxHumi}                             </td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default ExtremeValuesTable","import React from 'react'\n\nconst TopContent = ({ total_measurements, first_day, last_day }) => {\n\n    return (\n        <div className='topContent'>\n            <div className='infoBox'>\n                <h2 className='infoBoxHeader'>\n                    About\n                </h2>\n                <p className='infoBoxContent'>\n                    The greenhouse is placed on Erik's balcony on the fourth floor.\n                    This website runs on a Raspberry Pi inside the greenhouse. <br/><br/>\n                    Here you can find live measurements from the greenhouse and forecasting using mathematical models.\n                </p>\n            </div>\n\n            {/*<h1 className='mainTtile'>Erik's Greenhouse</h1>*/}\n\n            <div className='dataBox'>\n                <h2 className='dataBoxHeader'>\n                    Summary stats\n                </h2>\n                <ul className='dataBoxContent'>\n                    <li>Total measurements: {total_measurements}</li>\n                    <li>Measuring init: {first_day}</li>\n                    <li>Current day: {last_day}</li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default TopContent","import React, { useEffect, useState, useRef } from \"react\"\n\nimport './Dropdown.css'\n\n// source: https://medium.com/@pitipatdop/little-neat-trick-to-capture-click-outside-with-react-hook-ba77c37c7e82\n\nconst Dropdown = ({ value, options, options_numbers, onChange }) => {\n    // Below node variable is used for the \"close menu on elsewhere click\"-functionality\n    const node = useRef(null)\n\n    const [open, setOpen] = useState(false)\n\n    const handleClick = e => {\n        if (node.current.contains(e.target)) {\n            // inside click\n            return\n        }\n        // outside click\n        setOpen(false)\n    }\n\n    const handleChange = selectedValue => {\n        onChange(selectedValue)\n        setOpen(false)\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClick)\n\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClick)\n        }\n    }, [])\n\n    return (\n        <div ref={node} className=\"dropdown\">\n            <button className=\"dropdown-toggler\" onClick={e => setOpen(!open)}>\n                <div className='dropdown-toggler-text'>\n                    {value === 1 && <div>{value} day</div>}\n                    {value !== 1 && <div>{value} days</div>}\n                </div>\n                <div className='dropdown-toggler-arrow'>\n                    ▼\n                </div>\n            </button>\n            {open && (\n                <ul className=\"dropdown-menu\">\n                    {options.map((opt, index) => (\n                        <li key={index} className=\"dropdown-menu-item\" onClick={e => handleChange(options_numbers[index])}>\n                            {opt}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    )\n}\n\nexport default Dropdown;\n","import axios from 'axios'\nconst baseUrl = '/api/data'\n\nconst getData = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nexport default { getData }","import axios from 'axios'\nconst baseUrl = '/info'\n\nconst getInfo = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nexport default { getInfo }","import axios from 'axios'\nconst baseUrl = '/api/tempforecast'\n\nconst getForecast = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nexport default { getForecast }","import React, { useState, useEffect } from 'react'\n\n// Components\nimport Header from './components/Header.js'\nimport Footer from './components/Footer.js'\nimport Plots from './components/Plots.js'\nimport ExtremeValuesTable from './components/ExtremeValuesTable'\nimport TopContent from './components/TopContent'\nimport Dropdown from './components/Dropdown.js'\n\n// Fonts\nimport './fonts/GloriaHallelujah-Regular.ttf'\n\n// Styles\nimport './styles/main.css'\nimport './styles/tableStyle.css'\nimport './styles/footerHeaderStyle.css'\nimport './styles/buttonStyle.css'\nimport './styles/plotStyle.css'\nimport './styles/topContentStyle.css'\n\n// Services\nimport dataService from './services/data.js'\nimport infoService from './services/info.js'\nimport tempForecastService from './services/tempforecast.js'\n\n\nconst App = () => {\n\n    // allData contains all data fetched from DB\n    const [allData, setAllData] = useState([])\n    // displayData contains the data to be displayed in plots, initialized as allData\n    const [displayData, setDisplayData] = useState([])\n    // info contains general information about the measurements on the website\n    const beforeLoadInfo = {total_measurements: '-', first_day_of_measurements: '-', last_day_of_measurements: '-'}\n    const [info, setInfo] = useState([beforeLoadInfo])\n\n    const [dropdownChoice, setDropdownChoice] = useState(1)\n\n    // tempforecast contains temperature forecast\n    const [tempForecast, setTempForecast] = useState([])\n\n    // Initialize data states\n    useEffect(() => {\n        dataService\n            .getData()\n            .then(initialData => {\n                setAllData(initialData)\n                setDisplayData(initialData.slice(-48))\n            })\n        infoService\n            .getInfo()\n            .then(retrievedInfo => {\n                setInfo(retrievedInfo)\n            })\n        tempForecastService\n            .getForecast()\n            .then(retrievedForecast => {\n                setTempForecast(retrievedForecast)\n            })\n    }, [])\n\n    const handleDropdown = (nbrDays) => {\n        setDisplayData(allData.slice(-nbrDays * 48)) // 48 measurements per day\n        setDropdownChoice(nbrDays)\n    }\n\n    /*\n    <div className='plotbuttons'>\n                <button onClick={() => handleDropdown(1)}  >1 day</button>\n                <button onClick={() => handleDropdown(2)}  > 2 days</button >\n                <button onClick={() => handleDropdown(7)}  >7 days</button>\n                <button onClick={() => handleDropdown(30)} >30 days</button>\n            </div>\n    */\n\n\n    return (\n        <div className='wrapper'>\n            <Header />\n\n            <TopContent total_measurements={info[0].total_measurements} first_day={info[0].first_day_of_measurements} last_day={info[0].last_day_of_measurements} />\n\n            <h2>Temperature and Relative Humidity</h2>\n\n            <div className='select-horizon'>\n                <em className='dropdown-text'>Select time span:</em>\n                <Dropdown\n                value={dropdownChoice}\n                options={['1 day', '2 days', '7 days', '30 days']}\n                options_numbers={[1, 2, 7, 30]}\n                onChange={handleDropdown}\n                />\n            </div>\n\n            <Plots data={displayData} tempForecast={tempForecast} className={'plots'} />\n\n            <h2>Extremevalues past 7 days</h2>\n\n            <ExtremeValuesTable data={allData} />\n\n            <Footer />\n        </div >\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}